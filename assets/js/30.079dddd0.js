(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{309:function(e,a,o){"use strict";o.r(a);var s=o(14),r=Object(s.a)({},(function(){var e=this,a=e._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"javabean"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javabean"}},[e._v("#")]),e._v(" JavaBean")]),e._v(" "),a("p",[e._v("Defínese un JavaBean (ou Bean) como un compoñente software reutilizable e que pode ser\nmanipulado visualmente por unha ferramenta de programación en linguaxe Java.")]),e._v(" "),a("p",[e._v("Para que unha clase sexa considerada un JavaBean debe cumprir unha serie de normas.\nEstas normas permitirán ao IDE interrogar o Bean e coñecer as propiedades que define e\nos tipos de eventos que pode xerar en resposta a diversas accións.")]),e._v(" "),a("p",[e._v("Características dun JavaBean:")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("Persistencia")]),e._v(": debe poder gardarse o estado do Bean unha vez foi personalizado pola persoa programadora, é dicir, despois de cambiar os valores das súas propiedades.")]),e._v(" "),a("li",[a("strong",[e._v("Introspección")]),e._v(": debe permitir ao IDE poder recoñecer elementos de deseño como os nomes das propiedades, xunto co tipo de datos e os métodos.")]),e._v(" "),a("li",[a("strong",[e._v("Personalización")]),e._v(": a aparencia e conduta do Bean pode ser alterada pola persoa programadora mediante os cambios dos valores nas propiedades.")]),e._v(" "),a("li",[a("strong",[e._v("Eventos")]),e._v(": debe informar ao IDE dos sucesos que pode xerar en resposta ás accións das persoas usuarias e tamén os eventos que pode manexar.")])])])}),[],!1,null,null,null);a.default=r.exports}}]);